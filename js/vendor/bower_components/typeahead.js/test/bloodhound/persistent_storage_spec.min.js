describe("PersistentStorage",function(){var c,a;if(!window.localStorage){console.warn("no localStorage support – skipping PersistentStorage suite");return}localStorage.clear();beforeEach(function(){a={get length(){return localStorage.length},key:b("key"),clear:b("clear"),getItem:b("getItem"),setItem:b("setItem"),removeItem:b("removeItem")};c=new PersistentStorage("ns",a);spyOn(Date.prototype,"getTime").andReturn(0)});afterEach(function(){localStorage.clear()});describe("#get",function(){it("should access localStorage with prefixed key",function(){c.get("key");expect(a.getItem).toHaveBeenCalledWith("__ns__key")});it("should return undefined when key does not exist",function(){expect(c.get("does not exist")).toEqual(undefined)});it("should return value as correct type",function(){c.set("string","i am a string");c.set("number",42);c.set("boolean",true);c.set("null",null);c.set("object",{obj:true});expect(c.get("string")).toEqual("i am a string");expect(c.get("number")).toEqual(42);expect(c.get("boolean")).toEqual(true);expect(c.get("null")).toBeNull();expect(c.get("object")).toEqual({obj:true})});it("should expire stale keys",function(){c.set("key","value",-1);expect(c.get("key")).toBeNull();expect(a.getItem("__ns__key__ttl")).toBeNull()})});describe("#set",function(){it("should access localStorage with prefixed key",function(){c.set("key","val");expect(a.setItem.mostRecentCall.args[0]).toEqual("__ns__key")});it("should JSON.stringify value before storing",function(){c.set("key","val");expect(a.setItem.mostRecentCall.args[1]).toEqual(JSON.stringify("val"))});it("should store ttl if provided",function(){var d=1;c.set("key","value",d);expect(a.setItem.argsForCall[0]).toEqual(["__ns__key__ttl__",d.toString()])});it("should call clear if the localStorage limit has been reached",function(){var d;a.setItem.andCallFake(function(){var e=new Error();e.name="QuotaExceededError";throw e});c.clear=d=jasmine.createSpy();c.set("key","value",1);expect(d).toHaveBeenCalled()});it("should noop if the localStorage limit has been reached",function(){var f,h,e,d,g;a.setItem.andCallFake(function(){var i=new Error();i.name="QuotaExceededError";throw i});f=c.get;h=c.set;e=c.remove;d=c.clear;g=c.isExpired;c.set("key","value",1);expect(c.get).not.toBe(f);expect(c.set).not.toBe(h);expect(c.remove).not.toBe(e);expect(c.clear).not.toBe(d);expect(c.isExpired).not.toBe(g)})});describe("#remove",function(){it("should remove key from storage",function(){c.set("key","val");c.remove("key");expect(c.get("key")).toBeNull()})});describe("#clear",function(){it("should work with namespaces that contain regex characters",function(){c=new PersistentStorage("ns?()");c.set("key1","val1");c.set("key2","val2");c.clear();expect(c.get("key1")).toEqual(undefined);expect(c.get("key2")).toEqual(undefined)});it("should remove all keys that exist in namespace of engine",function(){c.set("key1","val1");c.set("key2","val2");c.set("key3","val3");c.set("key4","val4",0);c.clear();expect(c.get("key1")).toEqual(undefined);expect(c.get("key2")).toEqual(undefined);expect(c.get("key3")).toEqual(undefined);expect(c.get("key4")).toEqual(undefined)});it("should not affect keys with different namespace",function(){a.setItem("diff_namespace","val");c.clear();expect(a.getItem("diff_namespace")).toEqual("val")})});describe("#isExpired",function(){it("should be false for keys without ttl",function(){c.set("key","value");expect(c.isExpired("key")).toBe(false)});it("should be false for fresh keys",function(){c.set("key","value",1);expect(c.isExpired("key")).toBe(false)});it("should be true for stale keys",function(){c.set("key","value",-1);expect(c.isExpired("key")).toBe(true)})});function b(e){return jasmine.createSpy().andCallFake(d);function d(){return localStorage[e].apply(localStorage,arguments)}}});