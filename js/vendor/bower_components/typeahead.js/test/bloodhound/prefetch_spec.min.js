describe("Prefetch",function(){function b(c){return new Prefetch(_.mixin({url:"/prefetch",ttl:3600,cache:true,thumbprint:"",cacheKey:"cachekey",prepare:function(d){return d},transform:function(d){return d},transport:$.ajax},c||{}))}beforeEach(function(){jasmine.PersistentStorage.useMock();this.prefetch=b();this.storage=this.prefetch.storage;this.thumbprint=this.prefetch.thumbprint});describe("#clear",function(){it("should clear cache storage",function(){this.prefetch.clear();expect(this.storage.clear).toHaveBeenCalled()})});describe("#store",function(){it("should store data in the storage cache",function(){this.prefetch.store({foo:"bar"});expect(this.storage.set).toHaveBeenCalledWith("data",{foo:"bar"},3600)});it("should store thumbprint in the storage cache",function(){this.prefetch.store({foo:"bar"});expect(this.storage.set).toHaveBeenCalledWith("thumbprint",jasmine.any(String),3600)});it("should store protocol in the storage cache",function(){this.prefetch.store({foo:"bar"});expect(this.storage.set).toHaveBeenCalledWith("protocol",location.protocol,3600)});it("should be noop if cache option is false",function(){this.prefetch=b({cache:false});this.prefetch.store({foo:"bar"});expect(this.storage.set).not.toHaveBeenCalled()})});describe("#fromCache",function(){it("should return data if available",function(){this.storage.get.andCallFake(a({foo:"bar"},this.thumbprint));expect(this.prefetch.fromCache()).toEqual({foo:"bar"})});it("should return null if data is expired",function(){this.storage.get.andCallFake(a({foo:"bar"},"foo"));expect(this.prefetch.fromCache()).toBeNull()});it("should return null if data does not exist",function(){this.storage.get.andCallFake(a(null,this.thumbprint));expect(this.prefetch.fromCache()).toBeNull()});it("should return null if cache option is false",function(){this.prefetch=b({cache:false});this.storage.get.andCallFake(a({foo:"bar"},this.thumbprint));expect(this.prefetch.fromCache()).toBeNull();expect(this.storage.get).not.toHaveBeenCalled()})});describe("#fromNetwork",function(){it("should have sensible default request settings",function(){var c;c=jasmine.createSpy();spyOn(this.prefetch,"transport").andReturn($.Deferred());this.prefetch.fromNetwork(c);expect(this.prefetch.transport).toHaveBeenCalledWith({url:"/prefetch",type:"GET",dataType:"json"})});it("should transform request settings with prepare",function(){var c;c=jasmine.createSpy();spyOn(this.prefetch,"prepare").andReturn({foo:"bar"});spyOn(this.prefetch,"transport").andReturn($.Deferred());this.prefetch.fromNetwork(c);expect(this.prefetch.transport).toHaveBeenCalledWith({foo:"bar"})});it("should transform the response using transform",function(){var c;this.prefetch=b({transform:function(){return{bar:"foo"}}});c=jasmine.createSpy();spyOn(this.prefetch,"transport").andReturn($.Deferred().resolve({foo:"bar"}));this.prefetch.fromNetwork(c);expect(c).toHaveBeenCalledWith(null,{bar:"foo"})});it("should invoke callback with data if success",function(){var c;c=jasmine.createSpy();spyOn(this.prefetch,"transport").andReturn($.Deferred().resolve({foo:"bar"}));this.prefetch.fromNetwork(c);expect(c).toHaveBeenCalledWith(null,{foo:"bar"})});it("should invoke callback with err argument true if failure",function(){var c;c=jasmine.createSpy();spyOn(this.prefetch,"transport").andReturn($.Deferred().reject());this.prefetch.fromNetwork(c);expect(c).toHaveBeenCalledWith(true)})});function a(d,c,e){return function(f){var g;switch(f){case"data":g=d;break;case"protocol":g=e||location.protocol;break;case"thumbprint":g=c;break}return g}}});