describe("Typeahead",function(){var c,b;c=WWW();beforeEach(function(){var d,e;jasmine.Input.useMock();jasmine.Dataset.useMock();jasmine.Menu.useMock();setFixtures('<input type="text">');d=$("#jasmine-fixtures");this.$input=d.find("input");b={val:"foo bar",obj:"fiz"};this.view=new Typeahead({input:new Input(),menu:new Menu(),eventBus:new EventBus({el:this.$input})},c);this.input=this.view.input;this.menu=this.view.menu});describe("on selectableClicked",function(){var d,e;beforeEach(function(){d="selectableClicked";e=$("<foo>")});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onSelectableClicked");this.menu.trigger(d,e);expect(this.view._onSelectableClicked).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should select the selectable",function(){spyOn(this.view,"select");this.menu.trigger(d,e);expect(this.view.select).toHaveBeenCalledWith(e)})})});describe("on asyncRequested",function(){var d;beforeEach(function(){d="asyncRequested"});it("should trigger typeahead:asyncrequest",function(){var e=jasmine.createSpy();this.$input.on("typeahead:asyncrequest",e);this.menu.trigger(d);expect(e).toHaveBeenCalled()})});describe("on asyncCanceled",function(){var d;beforeEach(function(){d="asyncCanceled"});it("should trigger typeahead:asynccancel",function(){var e=jasmine.createSpy();this.$input.on("typeahead:asynccancel",e);this.menu.trigger(d);expect(e).toHaveBeenCalled()})});describe("on asyncReceived",function(){var d;beforeEach(function(){d="asyncReceived"});it("should trigger typeahead:asyncreceive",function(){var e=jasmine.createSpy();this.$input.on("typeahead:asyncreceive",e);this.menu.trigger(d);expect(e).toHaveBeenCalled()})});describe("on datasetRendered",function(){var d;beforeEach(function(){d="datasetRendered"});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onDatasetRendered");this.menu.trigger(d);expect(this.view._onDatasetRendered).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should update the hint",function(){this.input.hasOverflow.andReturn(false);this.menu.getTopSelectable.andReturn($("<fiz>"));this.menu.getSelectableData.andReturn(b);this.input.getInputValue.andReturn(b.val.slice(0,2));this.menu.trigger(d);expect(this.input.setHint).toHaveBeenCalled()});it("should trigger typeahead:render",function(){var e=jasmine.createSpy();this.$input.on("typeahead:render",e);this.menu.trigger(d);expect(e).toHaveBeenCalled()})})});describe("on datasetCleared",function(){var d;beforeEach(function(){d="datasetCleared"});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onDatasetCleared");this.menu.trigger(d);expect(this.view._onDatasetCleared).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should update the hint",function(){this.input.hasOverflow.andReturn(false);this.menu.getTopSelectable.andReturn($("<fiz>"));this.menu.getSelectableData.andReturn(b);this.input.getInputValue.andReturn(b.val.slice(0,2));this.menu.trigger(d);expect(this.input.setHint).toHaveBeenCalled()})})});describe("on focused",function(){var d;beforeEach(function(){d="focused"});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should activate typeahead",function(){this.input.trigger(d);expect(this.view.isActive()).toBe(true)});it("should open menu",function(){this.input.trigger(d);expect(this.menu.open).toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should open menu",function(){this.input.trigger(d);expect(this.menu.open).toHaveBeenCalled()});it("should update menu for query if minLength met",function(){this.input.getQuery.andReturn("bar");this.input.trigger(d);expect(this.menu.update).toHaveBeenCalledWith("bar")});it("should not update menu for query if minLength not met",function(){this.view.minLength=1;this.input.getQuery.andReturn("");this.input.trigger(d);expect(this.menu.update).not.toHaveBeenCalled()})})});describe("on blurred",function(){var d;beforeEach(function(){d="blurred"});it("should trigger typeahead:change if query changed since focus",function(){var e=jasmine.createSpy();this.input.hasQueryChangedSinceLastFocus.andReturn(true);this.$input.on("typeahead:change",e);this.input.trigger(d);expect(e).toHaveBeenCalled()});it("should not trigger typeahead:change if query has not changed since focus",function(){var e=jasmine.createSpy();this.input.hasQueryChangedSinceLastFocus.andReturn(false);this.$input.on("typeahead:change",e);this.input.trigger(d);expect(e).not.toHaveBeenCalled()});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should deactivate typeahead",function(){this.input.trigger(d);expect(this.view.isActive()).toBe(false)})})});describe("on enterKeyed",function(){var d,e;beforeEach(function(){d="enterKeyed";e=jasmine.createSpyObj("event",["preventDefault"])});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onEnterKeyed");this.input.trigger(d,e);expect(this.view._onEnterKeyed).not.toHaveBeenCalled()})});describe("when active and menu is closed",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(false)});it("should do nothing",function(){spyOn(this.view,"_onEnterKeyed");this.input.trigger(d,e);expect(this.view._onEnterKeyed).not.toHaveBeenCalled()})});describe("when active and menu is open",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(true)});it("should select selectable if there is an active one",function(){var f;f=$("<bah>");spyOn(this.view,"select");this.menu.getActiveSelectable.andReturn(f);this.input.trigger(d,e);expect(this.view.select).toHaveBeenCalledWith(f)});it("should prevent default if active selectale ",function(){var f;f=$("<bah>");spyOn(this.view,"select").andReturn(true);this.menu.getActiveSelectable.andReturn(f);this.input.trigger(d,e);expect(e.preventDefault).toHaveBeenCalled()});it("should not select selectable if there is no active one",function(){var f;f=$("<bah>");spyOn(this.view,"select");this.input.trigger(d,e);expect(this.view.select).not.toHaveBeenCalledWith(f)});it("should not prevent default if no active selectale",function(){var f;spyOn(this.view,"select").andReturn(true);f=$("<bah>");this.input.trigger(d,e);expect(e.preventDefault).not.toHaveBeenCalled()});it("should not prevent default if selection of active selectable fails",function(){var f;f=$("<bah>");spyOn(this.view,"select").andReturn(false);this.menu.getActiveSelectable.andReturn(f);this.input.trigger(d,e);expect(e.preventDefault).not.toHaveBeenCalled()})})});describe("on tabKeyed",function(){var d,e;beforeEach(function(){d="tabKeyed";e=jasmine.createSpyObj("event",["preventDefault"])});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onTabKeyed");this.input.trigger(d,e);expect(this.view._onTabKeyed).not.toHaveBeenCalled()})});describe("when active and menu is closed",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(false)});it("should do nothing",function(){spyOn(this.view,"_onTabKeyed");this.input.trigger(d,e);expect(this.view._onTabKeyed).not.toHaveBeenCalled()})});describe("when active and menu is open",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(true)});it("should select selectable if there is an active one",function(){var f;f=$("<bah>");spyOn(this.view,"select");this.menu.getActiveSelectable.andReturn(f);this.input.trigger(d,e);expect(this.view.select).toHaveBeenCalledWith(f)});it("should prevent default if active selectale",function(){var f;f=$("<bah>");spyOn(this.view,"select").andReturn(true);this.menu.getActiveSelectable.andReturn(f);this.input.trigger(d,e);expect(e.preventDefault).toHaveBeenCalled()});it("should not select selectable if there is no active one",function(){var f;f=$("<bah>");spyOn(this.view,"select");this.input.trigger(d,e);expect(this.view.select).not.toHaveBeenCalledWith(f)});it("should not prevent default if no active selectale",function(){var f;f=$("<bah>");spyOn(this.view,"select");this.input.trigger(d,e);expect(e.preventDefault).not.toHaveBeenCalled()});it("should not prevent default if selection of active selectable fails",function(){var f;f=$("<bah>");spyOn(this.view,"select").andReturn(false);this.menu.getActiveSelectable.andReturn(f);this.input.trigger(d,e);expect(e.preventDefault).not.toHaveBeenCalled()});it("should autocomplete to top suggestion",function(){var f;f=$("<foo>");spyOn(this.view,"autocomplete");this.menu.getTopSelectable.andReturn(f);this.input.trigger(d,e);expect(this.view.autocomplete).toHaveBeenCalledWith(f)});it("should prevent default behavior of DOM event if autocompletion succeeds",function(){var f;f=$("<foo>");spyOn(this.view,"autocomplete").andReturn(true);this.menu.getTopSelectable.andReturn(f);this.input.trigger(d,e);expect(e.preventDefault).toHaveBeenCalled()});it("should not prevent default behavior of DOM event if autocompletion fails",function(){var f;f=$("<foo>");spyOn(this.view,"autocomplete").andReturn(false);this.menu.getTopSelectable.andReturn(f);this.input.trigger(d,e);expect(e.preventDefault).not.toHaveBeenCalled()})})});describe("on escKeyed",function(){var d,e;beforeEach(function(){d="escKeyed";e=jasmine.createSpyObj("event",["preventDefault"])});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onEscKeyed");this.input.trigger(d,e);expect(this.view._onEscKeyed).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should close",function(){spyOn(this.view,"close");this.input.trigger(d,e);expect(this.view.close).toHaveBeenCalled()})})});describe("on upKeyed",function(){var d,e;beforeEach(function(){d="upKeyed";e=jasmine.createSpyObj("event",["preventDefault"])});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onUpKeyed");this.input.trigger(d,e);expect(this.view._onUpKeyed).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate();spyOn(this.view,"moveCursor")});it("should open menu",function(){this.input.trigger(d,e);expect(this.menu.open).toHaveBeenCalled()});it("should move cursor -1",function(){this.input.trigger(d,e);expect(this.view.moveCursor).toHaveBeenCalledWith(-1)})})});describe("on downKeyed",function(){var d,e;beforeEach(function(){d="downKeyed";e=jasmine.createSpyObj("event",["preventDefault"])});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onDownKeyed");this.input.trigger(d,e);expect(this.view._onDownKeyed).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate();spyOn(this.view,"moveCursor")});it("should open menu",function(){this.input.trigger(d,e);expect(this.menu.open).toHaveBeenCalled()});it("should move cursor +1",function(){this.input.trigger(d,e);expect(this.view.moveCursor).toHaveBeenCalledWith(1)})})});describe("on leftKeyed",function(){var d,e;beforeEach(function(){d="leftKeyed";e=jasmine.createSpyObj("event",["preventDefault"])});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onLeftKeyed");this.input.trigger(d,e);expect(this.view._onLeftKeyed).not.toHaveBeenCalled()})});describe("when active and menu is closed",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(false)});it("should do nothing",function(){spyOn(this.view,"_onLeftKeyed");this.input.trigger(d,e);expect(this.view._onLeftKeyed).not.toHaveBeenCalled()})});describe("when active and menu is open",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(true)});it("should autocomplete if language is rtl and text cursor is at end",function(){var f=$("<foo>");spyOn(this.view,"autocomplete");this.view.dir="rtl";this.input.isCursorAtEnd.andReturn(true);this.menu.getTopSelectable.andReturn(f);this.input.trigger(d,e);expect(this.view.autocomplete).toHaveBeenCalledWith(f)})})});describe("on rightKeyed",function(){var d,e;beforeEach(function(){d="rightKeyed";e=jasmine.createSpyObj("event",["preventDefault"])});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){spyOn(this.view,"_onRightKeyed");this.input.trigger(d,e);expect(this.view._onRightKeyed).not.toHaveBeenCalled()})});describe("when active and menu is closed",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(false)});it("should do nothing",function(){spyOn(this.view,"_onRightKeyed");this.input.trigger(d,e);expect(this.view._onRightKeyed).not.toHaveBeenCalled()})});describe("when active and menu is open",function(){beforeEach(function(){this.view.activate();this.menu.isOpen.andReturn(true)});it("should autocomplete if language is rtl and text cursor is at end",function(){var f=$("<foo>");spyOn(this.view,"autocomplete");this.view.dir="ltr";this.input.isCursorAtEnd.andReturn(true);this.menu.getTopSelectable.andReturn(f);this.input.trigger(d,e);expect(this.view.autocomplete).toHaveBeenCalledWith(f)})})});describe("on queryChanged",function(){var d,e;beforeEach(function(){d="queryChanged";e=""});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should not open menu",function(){this.input.trigger(d,e);expect(this.menu.open).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate();this.view.open()});it("should open menu",function(){this.input.trigger(d,e);expect(this.menu.open).toHaveBeenCalled()});it("should empty menu if minLength is not satisfied",function(){this.view.minLength=100;this.input.trigger(d,e);expect(this.menu.empty).toHaveBeenCalled()});it("should update menu if minLength is satisfied",function(){this.input.trigger(d,"fiz");expect(this.menu.update).toHaveBeenCalledWith("fiz")})})});describe("on whitespaceChanged",function(){var d,e;beforeEach(function(){d="whitespaceChanged";e=""});describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should not open menu",function(){this.input.trigger(d,e);expect(this.menu.open).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should open menu",function(){this.input.trigger(d,e);expect(this.menu.open).toHaveBeenCalled()});it("should update the hint",function(){this.input.hasFocus.andReturn(true);this.input.hasOverflow.andReturn(false);this.menu.getTopSelectable.andReturn($("<fiz>"));this.menu.getSelectableData.andReturn(b);this.input.getInputValue.andReturn(b.val.slice(0,2));this.input.trigger(d,e);expect(this.input.setHint).toHaveBeenCalledWith(b.val)})})});describe("on langDirChanged",function(){var d,e;beforeEach(function(){d="langDirChanged";e="rtl"});it("should set direction of menu if direction changed",function(){this.view.dir="ltr";this.input.trigger(d,e);expect(this.view.dir).toBe(e);expect(this.menu.setLanguageDirection).toHaveBeenCalled()});it("should do nothing if direction did not changed",function(){this.view.dir=e;this.input.trigger(d,e);expect(this.view.dir).toBe(e);expect(this.menu.setLanguageDirection).not.toHaveBeenCalled()})});describe("#isActive",function(){it("should return true if active",function(){this.view.activate();expect(this.view.isActive()).toBe(true)});it("should return false if active",function(){this.view.deactivate();expect(this.view.isActive()).toBe(false)})});describe("#isEnabled",function(){it("should returned enabled status",function(){this.view.enable();expect(this.view.isEnabled()).toBe(true);this.view.disable();expect(this.view.isEnabled()).toBe(false)})});describe("#enable",function(){it("should set enabled to true",function(){this.view.enable();expect(this.view.isEnabled()).toBe(true)})});describe("#disable",function(){it("should set enabled to false",function(){this.view.disable();expect(this.view.isEnabled()).toBe(false)})});describe("#activate",function(){describe("when active",function(){beforeEach(function(){this.view.activate()});it("should do nothing",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeactive",d);this.view.activate();expect(d).not.toHaveBeenCalled()})});describe("when idle and disabled",function(){beforeEach(function(){this.view.disable();this.view.activate()});it("should do nothing",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeactive",d);this.view.activate();expect(d).not.toHaveBeenCalled()})});describe("when idle and enabled",function(){beforeEach(function(){this.view.enable();this.view.deactivate()});it("should trigger typeahead:beforeactive",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeactive",d);this.view.activate();expect(d).toHaveBeenCalled()});it("should support cancellation",function(){var e,d;e=jasmine.createSpy().andCallFake(a);d=jasmine.createSpy();this.$input.on("typeahead:beforeactive",e);this.$input.on("typeahead:active",d);this.view.activate();expect(e).toHaveBeenCalled();expect(d).not.toHaveBeenCalled()});it("should change state to active",function(){expect(this.view.isActive()).toBe(false);this.view.activate();expect(this.view.isActive()).toBe(true)});it("should trigger typeahead:active if not canceled",function(){var d=jasmine.createSpy();this.$input.on("typeahead:active",d);this.view.activate();expect(d).toHaveBeenCalled()})})});describe("#deactivate",function(){describe("when idle",function(){beforeEach(function(){this.view.deactivate()});it("should do nothing",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeidle",d);this.view.deactivate();expect(d).not.toHaveBeenCalled()})});describe("when active",function(){beforeEach(function(){this.view.activate()});it("should trigger typeahead:beforeidle",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeidle",d);this.view.deactivate();expect(d).toHaveBeenCalled()});it("should support cancellation",function(){var e,d;e=jasmine.createSpy().andCallFake(a);d=jasmine.createSpy();this.$input.on("typeahead:beforeidle",e);this.$input.on("typeahead:idle",d);this.view.deactivate();expect(e).toHaveBeenCalled();expect(d).not.toHaveBeenCalled()});it("should close",function(){spyOn(this.view,"close");this.view.deactivate();expect(this.view.close).toHaveBeenCalled()});it("should change state to idle",function(){expect(this.view.isActive()).toBe(true);this.view.deactivate();expect(this.view.isActive()).toBe(false)});it("should trigger typeahead:idle if not canceled",function(){var d=jasmine.createSpy();this.$input.on("typeahead:idle",d);this.view.deactivate();expect(d).toHaveBeenCalled()})})});describe("#isOpen",function(){it("should return true if open",function(){this.menu.isOpen.andReturn(true);expect(this.view.isOpen()).toBe(true)});it("should return false if closed",function(){this.menu.isOpen.andReturn(false);expect(this.view.isOpen()).toBe(false)})});describe("#open",function(){describe("when open",function(){beforeEach(function(){spyOn(this.view,"isOpen").andReturn(true)});it("should do nothing",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeopen",d);this.view.open();expect(d).not.toHaveBeenCalled()})});describe("when closed",function(){beforeEach(function(){spyOn(this.view,"isOpen").andReturn(false)});it("should trigger typeahead:beforeopen",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeopen",d);this.view.open();expect(d).toHaveBeenCalled()});it("should support cancellation",function(){var e,d;e=jasmine.createSpy().andCallFake(a);d=jasmine.createSpy();this.$input.on("typeahead:beforeopen",e);this.$input.on("typeahead:open",d);this.view.open();expect(e).toHaveBeenCalled();expect(d).not.toHaveBeenCalled()});it("should open menu",function(){this.view.open();expect(this.menu.open).toHaveBeenCalled()});it("should update hint if active",function(){spyOn(this.view,"isActive").andReturn(true);this.input.hasOverflow.andReturn(false);this.menu.getTopSelectable.andReturn($("<fiz>"));this.menu.getSelectableData.andReturn(b);this.input.getInputValue.andReturn(b.val.slice(0,2));this.view.open();expect(this.input.setHint).toHaveBeenCalled()});it("should trigger typeahead:open if not canceled",function(){var d=jasmine.createSpy();this.$input.on("typeahead:open",d);this.view.open();expect(d).toHaveBeenCalled()})})});describe("#close",function(){describe("when closed",function(){beforeEach(function(){spyOn(this.view,"isOpen").andReturn(false)});it("should do nothing",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeclose",d);this.view.open();expect(d).not.toHaveBeenCalled()})});describe("when open",function(){beforeEach(function(){spyOn(this.view,"isOpen").andReturn(true)});it("should trigger typeahead:beforeclose",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforeclose",d);this.view.close();expect(d).toHaveBeenCalled()});it("should support cancellation",function(){var e,d;e=jasmine.createSpy().andCallFake(a);d=jasmine.createSpy();this.$input.on("typeahead:beforeclose",e);this.$input.on("typeahead:close",d);this.view.close();expect(e).toHaveBeenCalled();expect(d).not.toHaveBeenCalled()});it("should close menu",function(){this.view.close();expect(this.menu.close).toHaveBeenCalled()});it("should clear hint",function(){this.view.close();expect(this.input.clearHint).toHaveBeenCalled()});it("should trigger typeahead:close if not canceled",function(){var d=jasmine.createSpy();this.$input.on("typeahead:close",d);this.view.close();expect(d).toHaveBeenCalled()})})});describe("#getVal",function(){it("should return the current query",function(){this.input.getQuery.andReturn("woah");expect(this.view.getVal()).toBe("woah")})});describe("#setVal",function(){it("should update query",function(){this.input.hasFocus.andReturn(true);this.view.setVal("woah");expect(this.input.setQuery).toHaveBeenCalledWith("woah")})});describe("#select",function(){it("should do nothing if element is not a selectable",function(){var d;this.menu.getSelectableData.andReturn(null);this.$input.on("typeahead:beforeselect",d=jasmine.createSpy());this.view.select($("<bah>"));expect(d).not.toHaveBeenCalled()});it("should trigger typeahead:beforeselect",function(){var d;this.menu.getSelectableData.andReturn(b);this.$input.on("typeahead:beforeselect",d=jasmine.createSpy());this.view.select($("<bah>"));expect(d).toHaveBeenCalled()});it("should support cancellation",function(){var e,d;e=jasmine.createSpy().andCallFake(a);d=jasmine.createSpy();this.menu.getSelectableData.andReturn(b);this.$input.on("typeahead:beforeselect",e).on("typeahead:select",d);this.view.select($("<bah>"));expect(e).toHaveBeenCalled();expect(d).not.toHaveBeenCalled()});it("should update query",function(){this.menu.getSelectableData.andReturn(b);this.view.select($("<bah>"));expect(this.input.setQuery).toHaveBeenCalledWith(b.val,true)});it("should trigger typeahead:select",function(){var d;this.menu.getSelectableData.andReturn(b);this.$input.on("typeahead:select",d=jasmine.createSpy());this.view.select($("<bah>"));expect(d).toHaveBeenCalled()});it("should close",function(){spyOn(this.view,"close");this.menu.getSelectableData.andReturn(b);this.view.select($("<bah>"));expect(this.view.close).toHaveBeenCalled()})});describe("#autocomplete",function(){it("should abort if the query matches the top suggestion",function(){var d;this.input.getQuery.andReturn(b.val);this.menu.getSelectableData.andReturn(b);this.$input.on("typeahead:beforeautocomplete",d=jasmine.createSpy());this.view.autocomplete($("<bah>"));expect(d).not.toHaveBeenCalled()});it("should trigger typeahead:beforeautocomplete",function(){var d;this.menu.getSelectableData.andReturn(b);this.$input.on("typeahead:beforeautocomplete",d=jasmine.createSpy());this.view.autocomplete($("<bah>"));expect(d).toHaveBeenCalled()});it("should support cancellation",function(){var e,d;e=jasmine.createSpy().andCallFake(a);d=jasmine.createSpy();this.$input.on("typeahead:beforeautocomplete",e);this.$input.on("typeahead:autocomplete",d);this.menu.getSelectableData.andReturn(b);this.view.autocomplete($("<bah>"));expect(e).toHaveBeenCalled();expect(d).not.toHaveBeenCalled()});it("should update the query",function(){this.menu.getSelectableData.andReturn(b);this.view.autocomplete($("<bah>"));expect(this.input.setQuery).toHaveBeenCalledWith(b.val)});it("should trigger typeahead:autocomplete",function(){var d;this.menu.getSelectableData.andReturn(b);this.$input.on("typeahead:autocomplete",d=jasmine.createSpy());this.view.autocomplete($("<bah>"));expect(d).toHaveBeenCalled()})});describe("#moveCursor",function(){beforeEach(function(){this.input.getQuery.andReturn("foo")});it("should move cursor if minLength is not satisfied",function(){var d=jasmine.createSpy();this.view.minLength=100;this.menu.update.andReturn(true);this.$input.on("typeahead:beforecursorchange",d);this.view.moveCursor(1);expect(d).toHaveBeenCalled()});it("should move cursor if invalid update",function(){var d=jasmine.createSpy();this.menu.update.andReturn(false);this.$input.on("typeahead:beforecursorchange",d);this.view.moveCursor(1);expect(d).toHaveBeenCalled()});it("should not move cursor if valid update",function(){var d=jasmine.createSpy();this.menu.update.andReturn(true);this.$input.on("typeahead:beforecursorchange",d);this.view.moveCursor(1);expect(d).not.toHaveBeenCalled()});it("should trigger typeahead:beforecursorchange",function(){var d=jasmine.createSpy();this.$input.on("typeahead:beforecursorchange",d);this.view.moveCursor(1);expect(d).toHaveBeenCalled()});it("should support cancellation",function(){var d=jasmine.createSpy().andCallFake(a);this.$input.on("typeahead:beforecursorchange",d);this.view.moveCursor(1);expect(this.menu.setCursor).not.toHaveBeenCalled()});it("should update the input value if moved to selectable",function(){this.menu.getSelectableData.andReturn(b);this.view.moveCursor(1);expect(this.input.setInputValue).toHaveBeenCalledWith(b.val)});it("should reset the input value if moved to input",function(){this.view.moveCursor(1);expect(this.input.resetInputValue).toHaveBeenCalled()});it("should update the hint",function(){this.input.hasOverflow.andReturn(false);this.menu.getTopSelectable.andReturn($("<fiz>"));this.menu.getSelectableData.andCallFake(d);this.input.getInputValue.andReturn(b.val.slice(0,1));this.view.moveCursor(1);expect(this.input.setHint).toHaveBeenCalledWith(b.val);function d(e){return(e&&e.prop("tagName")==="FIZ")?b:null}});it("should trigger cursorchange after setting cursor",function(){var d=jasmine.createSpy();this.$input.on("typeahead:cursorchange",d);this.view.moveCursor(1);expect(d).toHaveBeenCalled()})});describe("#destroy",function(){it("should destroy input",function(){this.view.destroy();expect(this.input.destroy).toHaveBeenCalled()});it("should destroy menu",function(){this.view.destroy();expect(this.menu.destroy).toHaveBeenCalled()})});function a(d){d.preventDefault()}});