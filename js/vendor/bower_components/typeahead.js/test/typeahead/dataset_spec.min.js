describe("Dataset",function(){var d=WWW(),e,i;e=[{value:"one",raw:{value:"one"}},{value:"two",raw:{value:"two"}},{value:"html",raw:{value:"<b>html</b>"}}];i=[{display:"4"},{display:"5"},{display:"6"}];beforeEach(function(){this.dataset=new Dataset({name:"test",node:$("<div>"),source:this.source=jasmine.createSpy("source")},d)});it("should throw an error if source is missing",function(){expect(j).toThrow();function j(){new Dataset({},d)}});it("should throw an error if the name is not a valid class name",function(){expect(j).toThrow();function j(){var k=new Dataset({name:"a space",node:$("<div>"),source:$.noop},d)}});describe("#getRoot",function(){it("should return the root element",function(){var j="div"+d.selectors.dataset+d.selectors.dataset+"-test";expect(this.dataset.$el).toBe(j)})});describe("#update",function(){it("should render suggestions",function(){this.source.andCallFake(g);this.dataset.update("woah");expect(this.dataset.$el).toContainText("one");expect(this.dataset.$el).toContainText("two");expect(this.dataset.$el).toContainText("html")});it("should escape html chars from display value when using default template",function(){this.source.andCallFake(g);this.dataset.update("woah");expect(this.dataset.$el).toContainText("<b>html</b>")});it("should respect limit option",function(){this.dataset.limit=2;this.source.andCallFake(g);this.dataset.update("woah");expect(this.dataset.$el).toContainText("one");expect(this.dataset.$el).toContainText("two");expect(this.dataset.$el).not.toContainText("three")});it("should allow custom display functions",function(){this.dataset=new Dataset({name:"test",node:$("<div>"),display:function(j){return j.display},source:this.source=jasmine.createSpy("source")},d);this.source.andCallFake(a);this.dataset.update("woah");expect(this.dataset.$el).toContainText("4");expect(this.dataset.$el).toContainText("5");expect(this.dataset.$el).toContainText("6")});it("should ignore async invocations of sync",function(){this.source.andCallFake(c);this.dataset.update("woah");expect(this.dataset.$el).not.toContainText("one")});it("should ignore subesequent invocations of sync",function(){this.source.andCallFake(h);this.dataset.update("woah");expect(this.dataset.$el.find(".tt-suggestion")).toHaveLength(3)});it("should trigger asyncRequested when needing/expecting backfill",function(){var j=jasmine.createSpy();this.dataset.async=true;this.dataset.onSync("asyncRequested",j);this.source.andCallFake(b);this.dataset.update("woah");expect(j).toHaveBeenCalled()});it("should not trigger asyncRequested when not expecting backfill",function(){var j=jasmine.createSpy();this.dataset.async=false;this.dataset.onSync("asyncRequested",j);this.source.andCallFake(b);this.dataset.update("woah");expect(j).not.toHaveBeenCalled()});it("should not trigger asyncRequested when not expecting backfill",function(){var j=jasmine.createSpy();this.dataset.limit=2;this.dataset.async=true;this.dataset.onSync("asyncRequested",j);this.source.andCallFake(b);this.dataset.update("woah");expect(j).not.toHaveBeenCalled()});it("should trigger asyncCanceled when pending aysnc is canceled",function(){var j=jasmine.createSpy();this.dataset.async=true;this.dataset.onSync("asyncCanceled",j);this.source.andCallFake(b);this.dataset.update("woah");this.dataset.cancel();waits(100);runs(function(){expect(j).toHaveBeenCalled()})});it("should not trigger asyncCanceled when cancel happens after update",function(){var j=jasmine.createSpy();this.dataset.async=true;this.dataset.onSync("asyncCanceled",j);this.source.andCallFake(b);this.dataset.update("woah");waits(100);runs(function(){this.dataset.cancel();expect(j).not.toHaveBeenCalled()})});it("should trigger asyncReceived when aysnc is received",function(){var j=jasmine.createSpy();this.dataset.async=true;this.dataset.onSync("asyncReceived",j);this.source.andCallFake(b);this.dataset.update("woah");waits(100);runs(function(){expect(j).toHaveBeenCalled()})});it("should not trigger asyncReceived if canceled",function(){var j=jasmine.createSpy();this.dataset.async=true;this.dataset.onSync("asyncReceived",j);this.source.andCallFake(b);this.dataset.update("woah");this.dataset.cancel();waits(100);runs(function(){expect(j).not.toHaveBeenCalled()})});it("should not modify sync when async is added",function(){var j;this.dataset.async=true;this.source.andCallFake(b);this.dataset.update("woah");j=this.dataset.$el.find(".tt-suggestion").first();j.addClass("test");waits(100);runs(function(){expect(j).toHaveClass("test")})});it("should respect limit option in regard to async",function(){this.dataset.async=true;this.source.andCallFake(b);this.dataset.update("woah");waits(100);runs(function(){expect(this.dataset.$el.find(".tt-suggestion")).toHaveLength(5)})});it("should cancel pending async",function(){var k=jasmine.createSpy(),j=jasmine.createSpy();this.dataset.async=true;this.dataset.onSync("asyncCanceled",k);this.dataset.onSync("asyncReceived",j);this.source.andCallFake(b);this.dataset.update("woah");this.dataset.update("woah again");waits(100);runs(function(){expect(k.callCount).toBe(1);expect(j.callCount).toBe(1)})});it("should render notFound when no suggestions are available",function(){this.dataset=new Dataset({source:this.source,node:$("<div>"),templates:{notFound:"<h2>empty</h2>"}},d);this.source.andCallFake(f);this.dataset.update("woah");expect(this.dataset.$el).toContainText("empty")});it("should render pending when no suggestions are available but async is pending",function(){this.dataset=new Dataset({source:this.source,node:$("<div>"),async:true,templates:{pending:"<h2>pending</h2>"}},d);this.source.andCallFake(f);this.dataset.update("woah");expect(this.dataset.$el).toContainText("pending")});it("should render header when suggestions are rendered",function(){this.dataset=new Dataset({source:this.source,node:$("<div>"),templates:{header:"<h2>header</h2>"}},d);this.source.andCallFake(g);this.dataset.update("woah");expect(this.dataset.$el).toContainText("header")});it("should render footer when suggestions are rendered",function(){this.dataset=new Dataset({source:this.source,node:$("<div>"),templates:{footer:function(j){return"<p>"+j.query+"</p>"}}},d);this.source.andCallFake(g);this.dataset.update("woah");expect(this.dataset.$el).toContainText("woah")});it("should not render header/footer if there is no content",function(){this.dataset=new Dataset({source:this.source,node:$("<div>"),templates:{header:"<h2>header</h2>",footer:"<h2>footer</h2>"}},d);this.source.andCallFake(f);this.dataset.update("woah");expect(this.dataset.$el).not.toContainText("header");expect(this.dataset.$el).not.toContainText("footer")});it("should not render stale suggestions",function(){this.source.andCallFake(b);this.dataset.update("woah");this.source.andCallFake(g);this.dataset.update("nelly");waits(100);runs(function(){expect(this.dataset.$el).toContainText("one");expect(this.dataset.$el).toContainText("two");expect(this.dataset.$el).toContainText("html");expect(this.dataset.$el).not.toContainText("four");expect(this.dataset.$el).not.toContainText("five")})});it("should not render async suggestions if update was canceled",function(){this.source.andCallFake(b);this.dataset.update("woah");this.dataset.cancel();waits(100);runs(function(){var j=this.dataset.$el.find(".tt-suggestion");expect(j).toHaveLength(3)})});it("should trigger rendered after suggestions are rendered",function(){var j;this.dataset.onSync("rendered",j=jasmine.createSpy());this.source.andCallFake(g);this.dataset.update("woah");waitsFor(function(){return j.callCount})})});describe("#clear",function(){it("should clear suggestions",function(){this.source.andCallFake(g);this.dataset.update("woah");this.dataset.clear();expect(this.dataset.$el).toBeEmpty()});it("should cancel pending updates",function(){var j;this.source.andCallFake(g);this.dataset.update("woah");j=spyOn(this.dataset,"cancel");this.dataset.clear();expect(j).toHaveBeenCalled()});it("should trigger cleared",function(){var j;this.dataset.onSync("cleared",j=jasmine.createSpy());this.dataset.clear();expect(j).toHaveBeenCalled()})});describe("#isEmpty",function(){it("should return true when empty",function(){expect(this.dataset.isEmpty()).toBe(true)});it("should return false when not empty",function(){this.source.andCallFake(g);this.dataset.update("woah");expect(this.dataset.isEmpty()).toBe(false)})});describe("#destroy",function(){it("should set dataset element to dummy element",function(){var j=this.dataset.$el;this.dataset.destroy();expect(this.dataset.$el).not.toBe(j)})});function f(l,k,j){k([])}function g(l,k,j){k(e)}function a(l,k,j){k(i)}function c(l,k,j){setTimeout(function(){k(e)},0)}function h(l,k,j){k(e);k(e)}function b(l,k,j){k(e);setTimeout(function(){j([{value:"four",raw:{value:"four"}},{value:"five",raw:{value:"five"}},{value:"six",raw:{value:"six"}},{value:"seven",raw:{value:"seven"}},{value:"eight",raw:{value:"eight"}}])},0)}});